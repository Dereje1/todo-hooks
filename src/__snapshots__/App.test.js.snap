// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`App renders table 1`] = `
<Fragment>
  <div
    id="button-group-container"
    style={
      Object {
        "display": "flex",
        "justifyContent": "center",
        "marginBottom": 10,
        "marginTop": 10,
      }
    }
  >
    <ForwardRef(ButtonGroup)
      aria-label="outlined primary button group"
      sx={
        Object {
          "padding": 1,
        }
      }
      variant="contained"
    >
      <ForwardRef(Tooltip)
        title="Add a task"
      >
        <ForwardRef(IconButton)
          id="add-task"
          onClick={[Function]}
          sx={
            Object {
              "margin": 1,
            }
          }
        >
          <Memo(ForwardRef(AddIcon)) />
        </ForwardRef(IconButton)>
      </ForwardRef(Tooltip)>
      <ForwardRef(Tooltip)
        title="Completed tasks"
      >
        <ForwardRef(IconButton)
          id="completed-tasks"
          onClick={[Function]}
          sx={
            Object {
              "border": "",
              "margin": 1,
            }
          }
        >
          <Memo(ForwardRef(CheckIcon))
            color="primary"
          />
        </ForwardRef(IconButton)>
      </ForwardRef(Tooltip)>
      <ForwardRef(Tooltip)
        title="Active tasks"
      >
        <ForwardRef(IconButton)
          id="active-tasks"
          onClick={[Function]}
          sx={
            Object {
              "border": "",
              "margin": 1,
            }
          }
        >
          <Memo(ForwardRef(NotificationImportantIcon))
            color="error"
          />
        </ForwardRef(IconButton)>
      </ForwardRef(Tooltip)>
      <ForwardRef(Tooltip)
        title="All tasks"
      >
        <ForwardRef(IconButton)
          id="all-tasks"
          onClick={[Function]}
          sx={
            Object {
              "border": ".5px solid black",
              "margin": 1,
            }
          }
        >
          <Memo(ForwardRef(AllInclusiveIcon))
            color="success"
          />
        </ForwardRef(IconButton)>
      </ForwardRef(Tooltip)>
    </ForwardRef(ButtonGroup)>
  </div>
  <ForwardRef(TableContainer)
    component={
      Object {
        "$$typeof": Symbol(react.forward_ref),
        "propTypes": Object {
          "children": [Function],
          "className": [Function],
          "classes": [Function],
          "component": [Function],
          "elevation": [Function],
          "square": [Function],
          "sx": [Function],
          "variant": [Function],
        },
        "render": [Function],
      }
    }
    sx={
      Object {
        "margin": "0 auto",
        "maxWidth": 700,
      }
    }
  >
    <ForwardRef(Table)
      aria-label="collapsible table"
    >
      <ForwardRef(TableHead)>
        <ForwardRef(TableRow)>
          <ForwardRef(TableCell) />
          <ForwardRef(TableCell) />
          <ForwardRef(TableCell)>
            Edit
          </ForwardRef(TableCell)>
          <ForwardRef(TableCell)>
            Completed
          </ForwardRef(TableCell)>
          <ForwardRef(TableCell)>
            Delete
          </ForwardRef(TableCell)>
        </ForwardRef(TableRow)>
      </ForwardRef(TableHead)>
      <ForwardRef(TableBody)>
        <Row
          key="1"
          onCompleteTask={[Function]}
          onDeleteTask={[Function]}
          onEditTask={[Function]}
          openTaskDialog={false}
          row={
            Object {
              "completed": false,
              "description": "This is task # 1",
              "id": "1",
              "name": "Task 1",
            }
          }
        />
        <Row
          key="2"
          onCompleteTask={[Function]}
          onDeleteTask={[Function]}
          onEditTask={[Function]}
          openTaskDialog={false}
          row={
            Object {
              "completed": false,
              "description": "This is task # 2",
              "id": "2",
              "name": "Task 2",
            }
          }
        />
        <Row
          key="3"
          onCompleteTask={[Function]}
          onDeleteTask={[Function]}
          onEditTask={[Function]}
          openTaskDialog={false}
          row={
            Object {
              "completed": false,
              "description": "This is task # 3",
              "id": "3",
              "name": "Task 3",
            }
          }
        />
      </ForwardRef(TableBody)>
    </ForwardRef(Table)>
  </ForwardRef(TableContainer)>
</Fragment>
`;
